plugins {
    id 'java-library'
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '[7.0,7.1)'
}

repositories {
    mavenLocal()
}

group = 'redstonedubstep.mods'
version = '1.0.2'
archivesBaseName = 'serverdataaccessor'

java.toolchain.languageVersion = JavaLanguageVersion.of(21)
println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
    configureEach {
        systemProperty 'forge.logging.console.level', 'debug'
        systemProperty 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
        modSource project.sourceSets.main
    }

    client {
        workingDirectory project.file('run/client')
    }

    server {
        workingDirectory project.file('run/server')
        programArguments.addAll '-nogui'
    }

    data {
        workingDirectory project.file('run/data')
        programArguments.addAll '--mod', 'serverdataaccessor', '--all', '--output', file('src/generated/resources/').getAbsolutePath()
    }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
    implementation 'net.neoforged:neoforge:21.0.114-beta'

    // You may put jars on which you depend on in ./libs or you may define them like so..
    // compile "some.group:artifact:version:classifier"
    // compile "some.group:artifact:version"

    // Real examples
    // compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    // compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // The 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    // provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // These dependencies get remapped to your current MCP mappings
    // deobf 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
}

jar {
    manifest {
        attributes(["Specification-Title": "ServerDataAccessor",
                    "Specification-Vendor": "Redstone_Dubstep",
                    "Specification-Version": "${version}",
                    "Implementation-Title": "ServerDataAccessor",
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor" :"Redstone_Dubstep",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")])
    }
}
